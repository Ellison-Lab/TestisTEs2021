from os.path import realpath
from os.path import split as pathsplit
from os.path import basename
import subprocess
from snakemake.remote.FTP import RemoteProvider as FTPRemoteProvider
from snakemake.remote.HTTP import RemoteProvider as HTTPRemoteProvider
import sys
import random
import json


# Block annoying warnings
if not sys.warnoptions:
    import warnings
    warnings.simplefilter("ignore")

# Meta
__author__ = "Matt Lawlor"

# Setup
shell.executable("/bin/bash")


# Remotes
HTTP = HTTPRemoteProvider()
FTP = FTPRemoteProvider()

# DETERMINE REMOTE OR LOCAL RESOURCE
def determine_resource(path):
    if "ftp://" in path:
         return FTP.remote(path, immediate_close = True)
    elif "http://" in path:
         return HTTP.remote(path)
    elif "https://" in path:
         return HTTP.remote(path)
    else:
        return path

singularity: "docker://continuumio/miniconda3"
configfile: "config/config.yaml"
pepfile: "config/pep.yaml"

MAIN_CONFIG = config.get("MAIN_CONFIG",'config/config.yaml')

subworkflow scrna:
    workdir:
        "../subworkflows/gte21-scrna/"
    snakefile:
        "../subworkflows/gte21-scrna/workflow/Snakefile"
    configfile:
        MAIN_CONFIG

subworkflow gep:
    workdir:
        "../subworkflows/gte21-ica-grid/"
    snakefile:
        "../subworkflows/gte21-ica-grid/workflow/Snakefile"
    configfile:
        MAIN_CONFIG

subworkflow xa_ratio:
    workdir:
        "../subworkflows/gte21-tidal-xa/"
    snakefile:
        "../subworkflows/gte21-tidal-xa/workflow/Snakefile"
    configfile:
        MAIN_CONFIG

subworkflow hetchrom_y:
    workdir:
        "../subworkflows/gte21-y-hetchrom/"
    snakefile:
        "../subworkflows/gte21-y-hetchrom/workflow/Snakefile"
    #configfile:
    #    MAIN_CONFIG

subworkflow transposon_variants:
    workdir:
        "../subworkflows/transposon-variants-hts/"
    snakefile:
        "../subworkflows/transposon-variants-hts/workflow/Snakefile"
    configfile:
        MAIN_CONFIG

subworkflow te_var_expr:
    workdir:
        "../subworkflows/gte21-te-variant-expression/"
    snakefile:
        "../subworkflows/gte21-te-variant-expression/workflow/Snakefile"
    configfile:
        MAIN_CONFIG

subworkflow larval_polya:
    workdir:
        "../subworkflows/gte21-chimeric-rnaseq/"
    snakefile:
        "../subworkflows/gte21-chimeric-rnaseq/workflow/Snakefile"

subworkflow total_rna_fusions:
    workdir:
        "../subworkflows/gte21-total-rna-fusions/"
    snakefile:
        "../subworkflows/gte21-total-rna-fusions/workflow/Snakefile"

subworkflow pirna_kd_rnaseq:
    workdir:
        "../subworkflows/gte21-pirna-kd-rnaseq/"
    snakefile:
        "../subworkflows/gte21-pirna-kd-rnaseq/workflow/Snakefile"

# variables
RANDOM_SEED = config.get("RANDOM_SEED",2020)
random.seed(RANDOM_SEED)

FINAL_DATASETS = ['obs','var','expr','scaled','umis',
                    'grid_enr',#'grid_silhouette',
                    'optimal_gep_enr','optimal_gep_usage',
                    'optimal_gep_membership',
                    'xa_ratio']

FINAL_DATASETS_FILES = expand("results/finalized/{g}/{d}",g="larval-w1118-testes", d=FINAL_DATASETS) + ["results/finalized/hetchrom_assembly_insertions/"] + expand("results/finalized/wgs/{s}/copies/",s=['w1118_male','w1118_female']) + ["results/finalized/wgs/w1118_male/pileups/"] + expand("results/finalized/w1118-testes-total-rna/{r}-{t}-at-male-snps/",r=['rep1','rep2','rep3','rep4'],t=['depth','reads'])
#FINAL_DATASETS_FILES += larval_polya(expand("results/star/{s}",s=["larval_testes_cleaned_papain_01","larval_testes_papain_02","larval_testes_papain_03","larval_testes_papain_04"]))
FINAL_DATASETS_FILES += expand("results/finalized/larval-polya/{l}.tsv",l=["larval_testes_cleaned_papain_01","larval_testes_papain_02","larval_testes_papain_03","larval_testes_papain_04"])
FINAL_DATASETS_FILES += expand("results/finalized/optimal-gep-params/{g}.json",g=config.get('SCRNA_GROUPS'))
FINAL_DATASETS_FILES += expand("results/finalized/bigwigs/total-rna/{s}.{sub}.tes.strand-{t}.rpkm.bw",s=['w1118_testes'],sub=['rep1','rep2','rep3','rep4'],t=['forward','reverse'])
FINAL_DATASETS_FILES += expand("results/finalized/bigwigs/polya-rna/{s}.strand-{t}.rpkm.bw",s=['larval_testes_cleaned_papain_01','larval_testes_papain_02','larval_testes_papain_03','larval_testes_papain_04'],t=['forward','reverse'])
FINAL_DATASETS_FILES += ["results/finalized/wgs/w1118_male/snps.vcf"]
FINAL_DATASETS_FILES += total_rna_fusions(expand("results/arriba/w1118_testes_{s}/fusions.tsv",s=["01","02","03","04"]))
FINAL_DATASETS_FILES += "results/finalized/pirna_kd_rnaseq/pirna_kd_vs_control.res.tsv"

rule all:
    input:
        FINAL_DATASETS_FILES

include: "rules/finalize.smk"
include: "rules/figures.smk"
include: "rules/panel.smk"
